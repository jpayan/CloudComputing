{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///angular-bluebird-promises.min.js","webpack:///webpack/bootstrap b771613de06673ae0c5d","webpack:///./src/angular-bluebird-promises.js","webpack:///external \"angular\"","webpack:///external {\"root\":\"Promise\",\"commonjs\":\"bluebird\",\"commonjs2\":\"bluebird\",\"amd\":\"bluebird\"}"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_1__","__WEBPACK_EXTERNAL_MODULE_2__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","$qBluebird","resolve","reject","_bluebird2","Object","defineProperty","value","_typeof","Symbol","iterator","constructor","_angular","_angular2","_bluebird","prototype","extend","defer","deferred","promise","progressCallbacks","notify","progressValue","forEach","cb","rejected","when","cast","originalAll","all","promises","Array","isArray","props","originalThen","then","fulfilledHandler","rejectedHandler","progressHandler","push","originalFinally","finallyHandler","onPossiblyUnhandledRejection","ngModule","constant","config","$provide","Bluebird","decorator","run","$rootScope","setScheduler","$evalAsync","name"],"mappings":"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","file":"angular-bluebird-promises.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"), require(\"bluebird\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"angular\", \"bluebird\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angularBluebirdPromisesModuleName\"] = factory(require(\"angular\"), require(\"bluebird\"));\n\telse\n\t\troot[\"angularBluebirdPromisesModuleName\"] = factory(root[\"angular\"], root[\"Promise\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","/**\n * angular-bluebird-promises - Replaces $q with bluebirds promise API\n * @version v1.0.2\n * @link https://github.com/mattlewis92/angular-bluebird-promises\n * @license MIT\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"), require(\"bluebird\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"angular\", \"bluebird\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angularBluebirdPromisesModuleName\"] = factory(require(\"angular\"), require(\"bluebird\"));\n\telse\n\t\troot[\"angularBluebirdPromisesModuleName\"] = factory(root[\"angular\"], root[\"Promise\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tvar _angular = __webpack_require__(1);\n\t\n\tvar _angular2 = _interopRequireDefault(_angular);\n\t\n\tvar _bluebird = __webpack_require__(2);\n\t\n\tvar _bluebird2 = _interopRequireDefault(_bluebird);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// In regards to: https://github.com/petkaantonov/bluebird#for-library-authors\n\t// My reasoning behind not doing this is to prevent bundling bluebird code with this library\n\t\n\tfunction $qBluebird(resolve, reject) {\n\t  return new _bluebird2.default(resolve, reject);\n\t}\n\t\n\t$qBluebird.prototype = _bluebird2.default.prototype;\n\t\n\t_angular2.default.extend($qBluebird, _bluebird2.default);\n\t\n\t//Make bluebird API compatible with angular's subset of Q\n\t//Adapted from: https://gist.github.com/petkaantonov/8363789 and https://github.com/petkaantonov/bluebird-q\n\t\n\t$qBluebird.defer = function () {\n\t  var deferred = {};\n\t  deferred.promise = $qBluebird(function (resolve, reject) {\n\t    deferred.resolve = resolve;\n\t    deferred.reject = reject;\n\t  });\n\t  deferred.promise.progressCallbacks = [];\n\t  deferred.notify = function (progressValue) {\n\t    deferred.promise.progressCallbacks.forEach(function (cb) {\n\t      return typeof cb === 'function' && cb(progressValue);\n\t    });\n\t  };\n\t  return deferred;\n\t};\n\t\n\t$qBluebird.reject = $qBluebird.rejected;\n\t$qBluebird.when = $qBluebird.cast;\n\t\n\tvar originalAll = $qBluebird.all;\n\t$qBluebird.all = function (promises) {\n\t\n\t  if ((typeof promises === 'undefined' ? 'undefined' : _typeof(promises)) === 'object' && !Array.isArray(promises)) {\n\t    return $qBluebird.props(promises);\n\t  } else {\n\t    return originalAll(promises);\n\t  }\n\t};\n\t\n\tvar originalThen = $qBluebird.prototype.then;\n\t$qBluebird.prototype.then = function (fulfilledHandler, rejectedHandler, progressHandler) {\n\t  if (this.progressCallbacks) {\n\t    this.progressCallbacks.push(progressHandler);\n\t  }\n\t  return originalThen.call(this, fulfilledHandler, rejectedHandler, progressHandler);\n\t};\n\t\n\tvar originalFinally = $qBluebird.prototype.finally;\n\t$qBluebird.prototype.finally = function (finallyHandler, progressHandler) {\n\t  if (this.progressCallbacks) {\n\t    this.progressCallbacks.push(progressHandler);\n\t  }\n\t  return originalFinally.call(this, finallyHandler);\n\t};\n\t\n\t// You should override this, see the readme\n\t$qBluebird.onPossiblyUnhandledRejection(function () {});\n\t\n\tvar ngModule = _angular2.default.module('mwl.bluebird', []).constant('Bluebird', $qBluebird).config([\"$provide\", \"Bluebird\", function ($provide, Bluebird) {\n\t  $provide.decorator('$q', function () {\n\t    return Bluebird;\n\t  });\n\t}]).run([\"$rootScope\", \"Bluebird\", function ($rootScope, Bluebird) {\n\t  Bluebird.setScheduler(function (cb) {\n\t    return $rootScope.$evalAsync(cb);\n\t  });\n\t}]);\n\t\n\texports.default = ngModule.name;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** angular-bluebird-promises.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap b771613de06673ae0c5d\n **/","import angular from 'angular';\nimport Promise from 'bluebird';\n\n// In regards to: https://github.com/petkaantonov/bluebird#for-library-authors\n// My reasoning behind not doing this is to prevent bundling bluebird code with this library\n\nfunction $qBluebird(resolve, reject) {\n  return new Promise(resolve, reject);\n}\n\n$qBluebird.prototype = Promise.prototype;\n\nangular.extend($qBluebird, Promise);\n\n//Make bluebird API compatible with angular's subset of Q\n//Adapted from: https://gist.github.com/petkaantonov/8363789 and https://github.com/petkaantonov/bluebird-q\n\n$qBluebird.defer = function() {\n  const deferred = {};\n  deferred.promise = $qBluebird((resolve, reject) => {\n    deferred.resolve = resolve;\n    deferred.reject = reject;\n  });\n  deferred.promise.progressCallbacks = [];\n  deferred.notify = function(progressValue) {\n    deferred.promise.progressCallbacks.forEach(cb => typeof cb === 'function' && cb(progressValue));\n  };\n  return deferred;\n};\n\n$qBluebird.reject = $qBluebird.rejected;\n$qBluebird.when = $qBluebird.cast;\n\nconst originalAll = $qBluebird.all;\n$qBluebird.all = function(promises) {\n\n  if (typeof promises === 'object' && !Array.isArray(promises)) {\n    return $qBluebird.props(promises);\n  } else {\n    return originalAll(promises);\n  }\n\n};\n\nconst originalThen = $qBluebird.prototype.then;\n$qBluebird.prototype.then = function(fulfilledHandler, rejectedHandler, progressHandler) {\n  if (this.progressCallbacks) {\n    this.progressCallbacks.push(progressHandler);\n  }\n  return originalThen.call(this, fulfilledHandler, rejectedHandler, progressHandler);\n};\n\nconst originalFinally = $qBluebird.prototype.finally;\n$qBluebird.prototype.finally = function(finallyHandler, progressHandler) {\n  if (this.progressCallbacks) {\n    this.progressCallbacks.push(progressHandler);\n  }\n  return originalFinally.call(this, finallyHandler);\n};\n\n// You should override this, see the readme\n$qBluebird.onPossiblyUnhandledRejection(() => {});\n\nconst ngModule = angular\n  .module('mwl.bluebird', [])\n  .constant('Bluebird', $qBluebird)\n  .config(($provide, Bluebird) => {\n    $provide.decorator('$q', () => Bluebird);\n  })\n  .run(($rootScope, Bluebird) => {\n    Bluebird.setScheduler(cb => $rootScope.$evalAsync(cb));\n  });\n\nexport default ngModule.name;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/angular-bluebird-promises.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"angular\"\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":\"Promise\",\"commonjs\":\"bluebird\",\"commonjs2\":\"bluebird\",\"amd\":\"bluebird\"}\n ** module id = 2\n ** module chunks = 0\n **/"],"sourceRoot":""}